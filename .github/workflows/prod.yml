name: "supplier-prod-ecs"
on:
  push:
    branches:
      - prod

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: ${{ github.sha }}

jobs:
  cd:
    name: "Prod-Deployment"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Configure AWS credential
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECRs
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          APP_REPOSITORY:  supplier-api
          NGINX_REPOSITORY: supplier-api-nginx
        run: |
          echo $IMAGE_TAG
          echo $APP_REPOSITORY
          sed -i "s|<changeme>|$IMAGE_TAG|g" ./terraform/1851-prod-ecs/ecs-service.tf
    
          docker build -f Docker/Dockerfile -t $ECR_REGISTRY/$APP_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$APP_REPOSITORY:$IMAGE_TAG  
          echo "::set-output name=image::$ECR_REGISTRY/$APP_REPOSITORY:$IMAGE_TAG"
    
          echo $NGINX_REPOSITORY
          docker build  -f Docker/Dockerfile-nginx-prod -t $ECR_REGISTRY/$NGINX_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$NGINX_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$NGINX_REPOSITORY:$IMAGE_TAG"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.2

      - name: Terraform Init
        id: init 
        run: terraform init
        working-directory: ./terraform/1851-prod-ecs

      - name: Terraform state
        id: state
        run: terraform state rm aws_ecs_task_definition.service
        working-directory: ./terraform/1851-prod-ecs
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform/1851-prod-ecs

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false 
        working-directory: ./terraform/1851-prod-ecs

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false 
        working-directory: ./terraform/1851-prod-ecs
